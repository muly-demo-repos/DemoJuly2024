/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ReminderMail as PrismaReminderMail } from "@prisma/client";

export class ReminderMailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReminderMailCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reminderMail.count(args);
  }

  async reminderMails(
    args: Prisma.ReminderMailFindManyArgs
  ): Promise<PrismaReminderMail[]> {
    return this.prisma.reminderMail.findMany(args);
  }
  async reminderMail(
    args: Prisma.ReminderMailFindUniqueArgs
  ): Promise<PrismaReminderMail | null> {
    return this.prisma.reminderMail.findUnique(args);
  }
  async createReminderMail(
    args: Prisma.ReminderMailCreateArgs
  ): Promise<PrismaReminderMail> {
    return this.prisma.reminderMail.create(args);
  }
  async updateReminderMail(
    args: Prisma.ReminderMailUpdateArgs
  ): Promise<PrismaReminderMail> {
    return this.prisma.reminderMail.update(args);
  }
  async deleteReminderMail(
    args: Prisma.ReminderMailDeleteArgs
  ): Promise<PrismaReminderMail> {
    return this.prisma.reminderMail.delete(args);
  }
}
