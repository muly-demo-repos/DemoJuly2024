/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  ValidateNested,
  IsOptional,
  IsDate,
  IsEnum,
  IsBoolean,
} from "class-validator";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { Type } from "class-transformer";
import { EventTypeWhereUniqueInput } from "../../eventType/base/EventTypeWhereUniqueInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumBookingStatus } from "./EnumBookingStatus";
import { DestinationCalendarWhereUniqueInput } from "../../destinationCalendar/base/DestinationCalendarWhereUniqueInput";
import { BookingReferenceCreateNestedManyWithoutBookingsInput } from "./BookingReferenceCreateNestedManyWithoutBookingsInput";
import { AttendeeCreateNestedManyWithoutBookingsInput } from "./AttendeeCreateNestedManyWithoutBookingsInput";
import { DailyEventReferenceWhereUniqueInput } from "../../dailyEventReference/base/DailyEventReferenceWhereUniqueInput";
import { PaymentCreateNestedManyWithoutBookingsInput } from "./PaymentCreateNestedManyWithoutBookingsInput";
import { WorkflowReminderCreateNestedManyWithoutBookingsInput } from "./WorkflowReminderCreateNestedManyWithoutBookingsInput";

@InputType()
class BookingCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  uid!: string;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => EventTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => EventTypeWhereUniqueInput, {
    nullable: true,
  })
  eventType?: EventTypeWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  title!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  customInputs?: InputJsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startTime!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  endTime!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: true,
    enum: EnumBookingStatus,
  })
  @IsEnum(EnumBookingStatus)
  @Field(() => EnumBookingStatus)
  status!: "CANCELLED" | "ACCEPTED" | "REJECTED" | "PENDING";

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  paid!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cancellationReason?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rejectionReason?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  dynamicEventSlugRef?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  dynamicGroupSlugRef?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  rescheduled?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fromReschedule?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  recurringEventId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  smsReminderNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => DestinationCalendarWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DestinationCalendarWhereUniqueInput)
  @IsOptional()
  @Field(() => DestinationCalendarWhereUniqueInput, {
    nullable: true,
  })
  destinationCalendar?: DestinationCalendarWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => BookingReferenceCreateNestedManyWithoutBookingsInput,
  })
  @ValidateNested()
  @Type(() => BookingReferenceCreateNestedManyWithoutBookingsInput)
  @IsOptional()
  @Field(() => BookingReferenceCreateNestedManyWithoutBookingsInput, {
    nullable: true,
  })
  references?: BookingReferenceCreateNestedManyWithoutBookingsInput;

  @ApiProperty({
    required: false,
    type: () => AttendeeCreateNestedManyWithoutBookingsInput,
  })
  @ValidateNested()
  @Type(() => AttendeeCreateNestedManyWithoutBookingsInput)
  @IsOptional()
  @Field(() => AttendeeCreateNestedManyWithoutBookingsInput, {
    nullable: true,
  })
  attendees?: AttendeeCreateNestedManyWithoutBookingsInput;

  @ApiProperty({
    required: false,
    type: () => DailyEventReferenceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DailyEventReferenceWhereUniqueInput)
  @IsOptional()
  @Field(() => DailyEventReferenceWhereUniqueInput, {
    nullable: true,
  })
  dailyRef?: DailyEventReferenceWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutBookingsInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutBookingsInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutBookingsInput, {
    nullable: true,
  })
  payment?: PaymentCreateNestedManyWithoutBookingsInput;

  @ApiProperty({
    required: false,
    type: () => WorkflowReminderCreateNestedManyWithoutBookingsInput,
  })
  @ValidateNested()
  @Type(() => WorkflowReminderCreateNestedManyWithoutBookingsInput)
  @IsOptional()
  @Field(() => WorkflowReminderCreateNestedManyWithoutBookingsInput, {
    nullable: true,
  })
  workflowReminders?: WorkflowReminderCreateNestedManyWithoutBookingsInput;
}

export { BookingCreateInput as BookingCreateInput };
